group 'io.github.nullptrx.pangleflutter'
version '1.4.0'

buildscript {
    ext.kotlin_version = '1.5.30'
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
        // maven { url 'http://localhost:8081/repository/m2/' }
        // maven { url 'https://raw.githubusercontent.com/nullptrX/repo/master/m2' }
        // maven { url 'https://cdn.jsdelivr.net/gh/nullptrX/repo/m2/' }
        maven { url 'https://artifact.bytedance.com/repository/pangle'}
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}
def kEnv = localProperties.getProperty('pangle_flutter.env')
if (kEnv == null) {
    kEnv = 'cn'
}

android {
    compileSdkVersion 29

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main.manifest.srcFile "src/main/AndroidManifest-${kEnv}.xml"
        switch (kEnv) {
            case 'cn':
                main.java.srcDirs += 'src/main/cn'
                break
        }
    }
    defaultConfig {
        minSdkVersion 16
    }
    lintOptions {
        disable 'InvalidPackage'
    }

    buildTypes {
        release {
            consumerProguardFiles "proguard-rules.pro"
        }
    }

//    gradle.buildFinished { r ->
//        System.err.println "pangle_flutter: $kEnv"
//    }

}

dependencies {
    api 'com.pangle.cn:ads-sdk:3.9.0.5'
    // api 'io.github.nullptrx:pangle:3.9.0.5@aar'
    implementation 'androidx.appcompat:appcompat:+'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
